/*:
 [Оглавление](Table%20of%20contents) • [Предыдущая страница](@previous) • [Следущая страница](@next)

 # `@inlinable`

 [SE-0193](https://github.com/apple/swift-evolution/blob/master/proposals/0193-cross-module-inlining-and-specialization.md "Cross-module inlining and specialization") вводит два новых атрибута `@inlinable` и `@usableFromInline`.

 Они не являются необходимыми для кода приложения. Авторы библиотеки могут помечать некоторые публичные (public) функции, как  `@inlinable`. Это дает компилятору возможность оптимизировать обобщённый код за пределами модуля.

 Например, библиотека, предоставляющая набор алгоритмов коллекции, может пометить эти методы как `@inlinable`, чтобы компилятор мог специализировать клиентский код, использующий эти алгоритмы с типами, неизвестными при построении библиотеки.

  Пример (адаптирован из примера, приведенного в SE-0193):
 */
// Внутри модуля CollectionAlgorithms:
extension Sequence where Element: Equatable {
    /// Возвращает `true`, если все элементы последовательности равны.
    @inlinable
    public func allEqual() -> Bool {
        var iterator = makeIterator()
        guard let first = iterator.next() else {
            return true
        }
        while let next = iterator.next() {
            if first != next {
                return false
            }
        }
        return true
    }
}

[1,1,1,1,1].allEqual()
Array(repeating: 42, count: 1000).allEqual()
[1,1,2,1,1].allEqual()

/*:
 Хорошенько подумайте, прежде чем делать функцию inlinable (т.е поддерживающей подстановку). Использование `@inlinable`  фактически делает тело функции частью открытого интерфейса вашей библиотеки. Если вы позже измените реализацию (например, чтобы исправить ошибку), двоичные файлы, скомпилированные со старой версией, могут продолжать использовать старый (встроенный) код или даже сочетание старого и нового (потому что `@inlinable` - это только подсказка; оптимизатор решает для каждого сайта вызова, следует ли вставлять код или нет).

 Поскольку inlinable функции могут быть эмитированы в клиентский двоичный файл, они не могут ссылаться на объявления, которые не видны в клиентском двоичном файле. Вы можете использовать директиву `@usableFromInline`, чтобы сделать некоторые внутренние объявления в вашей библиотеке "ABI-public", что позволит использовать их в inlinable функциях.
 */
/*:
 [Оглавление](Table%20of%20contents) • [Предыдущая страница](@previous) • [Следущая страница](@next)
 */
